import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the maxSubsetSum function below.
    static long maxSubsetSum(long[] arr) {
        long max=((arr[0]>arr[1])?arr[0]:arr[1]);
        arr[1]=max;
        for(int i=2;i<arr.length;i++){
            if(arr[i-2]+arr[i]>max||arr[i]>max){
                if(arr[i]>arr[i-2]+arr[i]){
                    max=arr[i];
                }else {
                    max =arr[i-2]+arr[i];
                    arr[i]= max;
                }
            }else {
                arr[i]= max;
            }
        }
        return max;
        
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        long[] arr = new long[n];

        String[] arrItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < n; i++) {
            long arrItem = (long)Integer.parseInt(arrItems[i]);
            arr[i] = arrItem;
        }

        long res = maxSubsetSum(arr);

        bufferedWriter.write(String.valueOf(res));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
